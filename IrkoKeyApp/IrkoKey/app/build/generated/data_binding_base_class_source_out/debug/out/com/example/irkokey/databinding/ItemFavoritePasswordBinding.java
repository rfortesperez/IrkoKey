// Generated by view binder compiler. Do not edit!
package com.example.irkokey.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.irkokey.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFavoritePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout rowFavorite;

  @NonNull
  public final TextInputEditText tvPassword;

  @NonNull
  public final TextView tvUserName;

  @NonNull
  public final TextView tvWebsite;

  private ItemFavoritePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout rowFavorite, @NonNull TextInputEditText tvPassword,
      @NonNull TextView tvUserName, @NonNull TextView tvWebsite) {
    this.rootView = rootView;
    this.rowFavorite = rowFavorite;
    this.tvPassword = tvPassword;
    this.tvUserName = tvUserName;
    this.tvWebsite = tvWebsite;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFavoritePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFavoritePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_favorite_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFavoritePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout rowFavorite = (ConstraintLayout) rootView;

      id = R.id.tv_password;
      TextInputEditText tvPassword = ViewBindings.findChildViewById(rootView, id);
      if (tvPassword == null) {
        break missingId;
      }

      id = R.id.tv_userName;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      id = R.id.tv_website;
      TextView tvWebsite = ViewBindings.findChildViewById(rootView, id);
      if (tvWebsite == null) {
        break missingId;
      }

      return new ItemFavoritePasswordBinding((ConstraintLayout) rootView, rowFavorite, tvPassword,
          tvUserName, tvWebsite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
