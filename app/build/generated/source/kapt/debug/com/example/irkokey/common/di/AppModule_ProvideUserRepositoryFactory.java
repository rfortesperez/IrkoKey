// Generated by Dagger (https://dagger.dev).
package com.example.irkokey.common.di;

import com.example.irkokey.data.dao.UserDao;
import com.example.irkokey.data.repository.UserRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideUserRepositoryFactory implements Factory<UserRepository> {
  private final Provider<UserDao> userDaoProvider;

  public AppModule_ProvideUserRepositoryFactory(Provider<UserDao> userDaoProvider) {
    this.userDaoProvider = userDaoProvider;
  }

  @Override
  public UserRepository get() {
    return provideUserRepository(userDaoProvider.get());
  }

  public static AppModule_ProvideUserRepositoryFactory create(Provider<UserDao> userDaoProvider) {
    return new AppModule_ProvideUserRepositoryFactory(userDaoProvider);
  }

  public static UserRepository provideUserRepository(UserDao userDao) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideUserRepository(userDao));
  }
}
