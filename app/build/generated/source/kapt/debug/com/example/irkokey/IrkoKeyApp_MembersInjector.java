// Generated by Dagger (https://dagger.dev).
package com.example.irkokey;

import com.example.irkokey.common.infraestructure.Preferences;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class IrkoKeyApp_MembersInjector implements MembersInjector<IrkoKeyApp> {
  private final Provider<Preferences> preferencesProvider;

  public IrkoKeyApp_MembersInjector(Provider<Preferences> preferencesProvider) {
    this.preferencesProvider = preferencesProvider;
  }

  public static MembersInjector<IrkoKeyApp> create(Provider<Preferences> preferencesProvider) {
    return new IrkoKeyApp_MembersInjector(preferencesProvider);
  }

  @Override
  public void injectMembers(IrkoKeyApp instance) {
    injectPreferences(instance, preferencesProvider.get());
  }

  @InjectedFieldSignature("com.example.irkokey.IrkoKeyApp.preferences")
  public static void injectPreferences(IrkoKeyApp instance, Preferences preferences) {
    instance.preferences = preferences;
  }
}
