// Generated by Dagger (https://dagger.dev).
package com.example.irkokey.common.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.crypto.SecretKey;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideSecretKeyFactory implements Factory<SecretKey> {
  @Override
  public SecretKey get() {
    return provideSecretKey();
  }

  public static AppModule_ProvideSecretKeyFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static SecretKey provideSecretKey() {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideSecretKey());
  }

  private static final class InstanceHolder {
    private static final AppModule_ProvideSecretKeyFactory INSTANCE = new AppModule_ProvideSecretKeyFactory();
  }
}
