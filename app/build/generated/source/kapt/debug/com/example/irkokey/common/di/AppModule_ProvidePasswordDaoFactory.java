// Generated by Dagger (https://dagger.dev).
package com.example.irkokey.common.di;

import com.example.irkokey.data.dao.PasswordDao;
import com.example.irkokey.data.database.PasswordRoomDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvidePasswordDaoFactory implements Factory<PasswordDao> {
  private final Provider<PasswordRoomDatabase> databaseProvider;

  public AppModule_ProvidePasswordDaoFactory(Provider<PasswordRoomDatabase> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public PasswordDao get() {
    return providePasswordDao(databaseProvider.get());
  }

  public static AppModule_ProvidePasswordDaoFactory create(
      Provider<PasswordRoomDatabase> databaseProvider) {
    return new AppModule_ProvidePasswordDaoFactory(databaseProvider);
  }

  public static PasswordDao providePasswordDao(PasswordRoomDatabase database) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providePasswordDao(database));
  }
}
