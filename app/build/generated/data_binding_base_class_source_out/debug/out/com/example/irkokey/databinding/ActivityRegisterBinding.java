// Generated by view binder compiler. Do not edit!
package com.example.irkokey.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.irkokey.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRegister;

  @NonNull
  public final TextInputEditText etConfirmPin;

  @NonNull
  public final EditText etEmail;

  @NonNull
  public final TextInputEditText etPin;

  @NonNull
  public final ConstraintLayout register;

  @NonNull
  public final TextInputLayout tilConfirmPin;

  @NonNull
  public final TextInputLayout tilPin;

  @NonNull
  public final TextView tvConfirmPin;

  @NonNull
  public final TextView tvIntroduceEmail;

  @NonNull
  public final TextView tvIntroducePinRegister;

  @NonNull
  public final TextView tvNeedRegister;

  @NonNull
  public final TextView tvWellcome;

  private ActivityRegisterBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnRegister,
      @NonNull TextInputEditText etConfirmPin, @NonNull EditText etEmail,
      @NonNull TextInputEditText etPin, @NonNull ConstraintLayout register,
      @NonNull TextInputLayout tilConfirmPin, @NonNull TextInputLayout tilPin,
      @NonNull TextView tvConfirmPin, @NonNull TextView tvIntroduceEmail,
      @NonNull TextView tvIntroducePinRegister, @NonNull TextView tvNeedRegister,
      @NonNull TextView tvWellcome) {
    this.rootView = rootView;
    this.btnRegister = btnRegister;
    this.etConfirmPin = etConfirmPin;
    this.etEmail = etEmail;
    this.etPin = etPin;
    this.register = register;
    this.tilConfirmPin = tilConfirmPin;
    this.tilPin = tilPin;
    this.tvConfirmPin = tvConfirmPin;
    this.tvIntroduceEmail = tvIntroduceEmail;
    this.tvIntroducePinRegister = tvIntroducePinRegister;
    this.tvNeedRegister = tvNeedRegister;
    this.tvWellcome = tvWellcome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_register;
      Button btnRegister = ViewBindings.findChildViewById(rootView, id);
      if (btnRegister == null) {
        break missingId;
      }

      id = R.id.et_confirm_pin;
      TextInputEditText etConfirmPin = ViewBindings.findChildViewById(rootView, id);
      if (etConfirmPin == null) {
        break missingId;
      }

      id = R.id.et_email;
      EditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.et_pin;
      TextInputEditText etPin = ViewBindings.findChildViewById(rootView, id);
      if (etPin == null) {
        break missingId;
      }

      ConstraintLayout register = (ConstraintLayout) rootView;

      id = R.id.til_confirm_pin;
      TextInputLayout tilConfirmPin = ViewBindings.findChildViewById(rootView, id);
      if (tilConfirmPin == null) {
        break missingId;
      }

      id = R.id.til_pin;
      TextInputLayout tilPin = ViewBindings.findChildViewById(rootView, id);
      if (tilPin == null) {
        break missingId;
      }

      id = R.id.tv_confirm_pin;
      TextView tvConfirmPin = ViewBindings.findChildViewById(rootView, id);
      if (tvConfirmPin == null) {
        break missingId;
      }

      id = R.id.tv_introduce_email;
      TextView tvIntroduceEmail = ViewBindings.findChildViewById(rootView, id);
      if (tvIntroduceEmail == null) {
        break missingId;
      }

      id = R.id.tv_introduce_pin_register;
      TextView tvIntroducePinRegister = ViewBindings.findChildViewById(rootView, id);
      if (tvIntroducePinRegister == null) {
        break missingId;
      }

      id = R.id.tv_need_register;
      TextView tvNeedRegister = ViewBindings.findChildViewById(rootView, id);
      if (tvNeedRegister == null) {
        break missingId;
      }

      id = R.id.tv_wellcome;
      TextView tvWellcome = ViewBindings.findChildViewById(rootView, id);
      if (tvWellcome == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((ConstraintLayout) rootView, btnRegister, etConfirmPin,
          etEmail, etPin, register, tilConfirmPin, tilPin, tvConfirmPin, tvIntroduceEmail,
          tvIntroducePinRegister, tvNeedRegister, tvWellcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
